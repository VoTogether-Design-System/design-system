{"version":3,"file":"ResponsiveFlex.stories-25925cbc.js","sources":["../../src/lib/ResponsiveFlex/style.ts","../../src/lib/ResponsiveFlex/index.tsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { MarginPadding, StringPixel } from '../types';\n\ninterface WrapperProps {\n  breakpoint: StringPixel;\n  $smGap: StringPixel;\n  $lgGap: StringPixel;\n  $smMargin: MarginPadding;\n  $smPadding: MarginPadding;\n  $lgMargin: MarginPadding;\n  $lgPadding: MarginPadding;\n  $justifyContent: string;\n  $alignItems: string;\n}\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: ${({ $justifyContent }) => $justifyContent};\n  align-items: ${({ $alignItems }) => $alignItems};\n\n  gap: ${({ $smGap }) => $smGap};\n\n  width: 100%;\n  height: 100%;\n\n  margin: ${({ $smMargin }) => $smMargin};\n  padding: ${({ $smPadding }) => $smPadding};\n\n  overflow-x: hidden;\n  overflow-y: hidden;\n\n  @media (min-width: ${({ breakpoint }) => breakpoint}) {\n    flex-direction: row;\n    gap: ${({ $lgGap }) => $lgGap};\n\n    margin: ${({ $lgMargin }) => $lgMargin};\n    padding: ${({ $lgPadding }) => $lgPadding};\n\n    overflow-y: auto;\n  }\n`;\n\nexport const FirstBox = styled.div<{ breakpoint: string; ratio: number }>`\n  width: 100%;\n  height: ${({ ratio }) => `${ratio}%`};\n\n  @media (min-width: ${({ breakpoint }) => breakpoint}) {\n    width: ${({ ratio }) => `${ratio}%`};\n    height: 100%;\n  }\n`;\n\nexport const SecondBox = styled.div<{ breakpoint: string; ratio: number }>`\n  width: 100%;\n  height: ${({ ratio }) => `${ratio}%`};\n\n  @media (min-width: ${({ breakpoint }) => breakpoint}) {\n    width: ${({ ratio }) => `${ratio}%`};\n    height: 100%;\n  }\n`;\n","import { PropsWithChildren, ReactNode } from 'react';\n\nimport { theme } from '../style/theme';\nimport { MarginPadding, StringPixel } from '../types';\n\nimport * as S from './style';\n\ninterface ResponsiveFlexProps extends PropsWithChildren {\n  /**\n   * breakpoint that arranges children from horizontal to vertical (min-width: breakpoint)\n   */\n  breakpoint: StringPixel;\n  /**\n   * gap between two children when width is less than breakpoint\n   */\n  $smGap?: StringPixel;\n  /**\n   * gap between two children when width is no less than breakpoint\n   */\n  $lgGap?: StringPixel;\n  /**\n   * ratio of left-sided child(first index of children)\n   * unit is percent (ex. 40%)\n   * (if 70%, right-sided is automatically 30%)\n   */\n  ratio?: number;\n  /**\n   * margin of Flex when width is less than breakpoint\n   */\n  $smMargin?: MarginPadding;\n  /**\n   * padding of Flex when width is less than breakpoint\n   */\n  $smPadding?: MarginPadding;\n  /**\n   * margin of Flex when width is no less than breakpoint\n   */\n  $lgMargin?: MarginPadding;\n  /**\n   * padding of Flex when width is no less than breakpoint\n   */\n  $lgPadding?: MarginPadding;\n  /**\n   * justify-content of Flex\n   */\n  $justifyContent?: string;\n  /**\n   * align-items of Flex\n   */\n  $alignItems?: string;\n  /**\n   * children of Flex, The number of children should be 2\n   */\n  children: [ReactNode, ReactNode];\n}\n\nexport default function ResponsiveFlex({\n  breakpoint = theme.breakpoint.sm,\n  $smGap = '10px',\n  $lgGap = '10px',\n  ratio = 50,\n  $smMargin = '10px',\n  $smPadding = '10px',\n  $lgMargin = '10px',\n  $lgPadding = '10px',\n  $justifyContent = 'space-between',\n  $alignItems = 'center',\n  children,\n}: ResponsiveFlexProps) {\n  if (children.length !== 2)\n    return <div>ResponsiveFlex component needs two children.</div>;\n\n  return (\n    <S.Wrapper\n      breakpoint={breakpoint}\n      $smGap={$smGap}\n      $lgGap={$lgGap}\n      $smMargin={$smMargin}\n      $smPadding={$smPadding}\n      $lgMargin={$lgMargin}\n      $lgPadding={$lgPadding}\n      $justifyContent={$justifyContent}\n      $alignItems={$alignItems}\n    >\n      <S.FirstBox breakpoint={breakpoint} ratio={ratio}>\n        {children[0]}\n      </S.FirstBox>\n      <S.SecondBox breakpoint={breakpoint} ratio={100 - ratio}>\n        {children[1]}\n      </S.SecondBox>\n    </S.Wrapper>\n  );\n}\n"],"names":["Wrapper","styled","$justifyContent","$alignItems","$smGap","$smMargin","$smPadding","breakpoint","$lgGap","$lgMargin","$lgPadding","FirstBox","ratio","SecondBox","ResponsiveFlex","theme","children","jsx","jsxs","S.Wrapper","S.FirstBox","S.SecondBox"],"mappings":"oLAeO,MAAMA,EAAUC,EAAO;AAAA;AAAA;AAAA,qBAGT,CAAC,CAAE,gBAAAC,CAAgB,IAAMA,CAAe;AAAA,iBAC5C,CAAC,CAAE,YAAAC,CAAY,IAAMA,CAAW;AAAA;AAAA,SAExC,CAAC,CAAE,OAAAC,CAAO,IAAMA,CAAM;AAAA;AAAA;AAAA;AAAA;AAAA,YAKnB,CAAC,CAAE,UAAAC,CAAU,IAAMA,CAAS;AAAA,aAC3B,CAAC,CAAE,WAAAC,CAAW,IAAMA,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKpB,CAAC,CAAE,WAAAC,CAAW,IAAMA,CAAU;AAAA;AAAA,WAE1C,CAAC,CAAE,OAAAC,CAAO,IAAMA,CAAM;AAAA;AAAA,cAEnB,CAAC,CAAE,UAAAC,CAAU,IAAMA,CAAS;AAAA,eAC3B,CAAC,CAAE,WAAAC,CAAW,IAAMA,CAAU;AAAA;AAAA;AAAA;AAAA,EAMhCC,EAAWV,EAAO;AAAA;AAAA,YAEnB,CAAC,CAAE,MAAAW,CAAY,IAAA,GAAGA,CAAK,GAAG;AAAA;AAAA,uBAEf,CAAC,CAAE,WAAAL,CAAW,IAAMA,CAAU;AAAA,aACxC,CAAC,CAAE,MAAAK,CAAY,IAAA,GAAGA,CAAK,GAAG;AAAA;AAAA;AAAA,EAK1BC,EAAYZ,EAAO;AAAA;AAAA,YAEpB,CAAC,CAAE,MAAAW,CAAY,IAAA,GAAGA,CAAK,GAAG;AAAA;AAAA,uBAEf,CAAC,CAAE,WAAAL,CAAW,IAAMA,CAAU;AAAA,aACxC,CAAC,CAAE,MAAAK,CAAY,IAAA,GAAGA,CAAK,GAAG;AAAA;AAAA;AAAA,ECFvC,SAAAE,EAAA,CAAuC,WAAAP,EAAAQ,EAAA,WAAA,GACP,OAAAX,EAAA,OACrB,OAAAI,EAAA,OACA,MAAAI,EAAA,GACD,UAAAP,EAAA,OACI,WAAAC,EAAA,OACC,UAAAG,EAAA,OACD,WAAAC,EAAA,OACC,gBAAAR,EAAA,gBACK,YAAAC,EAAA,SACJ,SAAAa,CAEhB,EAAA,CACE,OAAAA,EAAA,SAAA,EACEC,EAAA,MAAA,CAAA,SAAA,8CAAA,CAAA,EAEFC,EACEC,EAAG,CAAF,WAAAZ,EACC,OAAAH,EACA,OAAAI,EACA,UAAAH,EACA,WAAAC,EACA,UAAAG,EACA,WAAAC,EACA,gBAAAR,EACA,YAAAC,EACA,SAAA,CAEAc,EAAAG,EAAA,CAAA,WAAAb,EAAA,MAAAK,EAAA,SAAAI,EAAA,CAAA,EAAA,EAEAC,EAAAI,EAAA,CAAA,WAAAd,EAAA,MAAA,IAAAK,EAAA,SAAAI,EAAA,CAAA,EAAA,CAGA,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}