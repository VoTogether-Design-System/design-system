{"version":3,"file":"RoundButton.stories-c5fbf249.js","sources":["../../src/lib/RoundButton/style.ts","../../src/lib/RoundButton/index.tsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Size } from '../types';\nimport { theme } from '../style/theme';\n\ninterface ButtonProps {\n  size: Size;\n  isAutoResize: boolean;\n}\n\nconst SIZE = {\n  sm: { button: '30px' },\n  md: { button: '45px' },\n  lg: { button: '60px' },\n};\n\nexport const Button = styled.button<ButtonProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: ${(props) => SIZE[props.size].button};\n  height: ${(props) => SIZE[props.size].button};\n  border-radius: 50%;\n\n  background-color: var(--primary-color);\n  color: var(--white);\n\n  cursor: pointer;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    width: ${({ size, isAutoResize }) =>\n      isAutoResize && `calc(${SIZE[size].button} * 1.1)`};\n    height: ${({ size, isAutoResize }) =>\n      isAutoResize && `calc(${SIZE[size].button} * 1.1)`};\n  }\n\n  @media (min-width: ${theme.breakpoint.lg}) {\n    width: ${({ size, isAutoResize }) =>\n      isAutoResize && `calc(${SIZE[size].button} * 1.2)`};\n    height: ${({ size, isAutoResize }) =>\n      isAutoResize && `calc(${SIZE[size].button} * 1.2)`};\n  }\n`;\n","import { ButtonHTMLAttributes, CSSProperties, PropsWithChildren } from 'react';\n\nimport { Size } from '../types';\n\nimport * as S from './style';\nimport { GlobalStyle } from '../style/globalStyle';\n\ninterface RoundButtonProps\n  extends ButtonHTMLAttributes<HTMLButtonElement>,\n    PropsWithChildren {\n  size?: Size;\n  style?: CSSProperties;\n  isAutoResize?: boolean;\n}\n\nexport default function RoundButton({\n  size = 'sm',\n  style,\n  isAutoResize = false,\n  children,\n  ...rest\n}: RoundButtonProps) {\n  return (\n    <>\n      <GlobalStyle />\n      <S.Button\n        style={style}\n        size={size}\n        isAutoResize={isAutoResize}\n        aria-label=\"더하기\"\n        {...rest}\n      >\n        {children}\n      </S.Button>\n    </>\n  );\n}\n"],"names":["SIZE","Button","styled","props","theme","size","isAutoResize","RoundButton","style","children","rest","jsxs","Fragment","jsx","GlobalStyle","S.Button"],"mappings":"8OASA,MAAMA,EAAO,CACX,GAAI,CAAE,OAAQ,MAAO,EACrB,GAAI,CAAE,OAAQ,MAAO,EACrB,GAAI,CAAE,OAAQ,MAAO,CACvB,EAEaC,EAASC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,WAKjBC,GAAUH,EAAKG,EAAM,IAAI,EAAE,MAAM;AAAA,YAChCA,GAAUH,EAAKG,EAAM,IAAI,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQvBC,EAAM,WAAW,EAAE;AAAA,aAC7B,CAAC,CAAE,KAAAC,EAAM,aAAAC,CAAa,IAC7BA,GAAgB,QAAQN,EAAKK,CAAI,EAAE,MAAM,SAAS;AAAA,cAC1C,CAAC,CAAE,KAAAA,EAAM,aAAAC,CAAa,IAC9BA,GAAgB,QAAQN,EAAKK,CAAI,EAAE,MAAM,SAAS;AAAA;AAAA;AAAA,uBAGjCD,EAAM,WAAW,EAAE;AAAA,aAC7B,CAAC,CAAE,KAAAC,EAAM,aAAAC,CAAa,IAC7BA,GAAgB,QAAQN,EAAKK,CAAI,EAAE,MAAM,SAAS;AAAA,cAC1C,CAAC,CAAE,KAAAA,EAAM,aAAAC,CAAa,IAC9BA,GAAgB,QAAQN,EAAKK,CAAI,EAAE,MAAM,SAAS;AAAA;AAAA,ECzBxD,SAAAE,EAAA,CAAoC,KAAAF,EAAA,KAC3B,MAAAG,EACP,aAAAF,EAAA,GACe,SAAAG,EACf,GAAAC,CAEF,EAAA,CACE,OAAAC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,EAAA,EAAaD,EACbE,EAAG,CAAF,MAAAP,EACC,KAAAH,EACA,aAAAC,EACA,aAAA,MACW,GAAAI,EACP,SAAAD,CAEH,CAAA,CACH,CAAA,CAAA,CAGN;;;;;;;;;;"}