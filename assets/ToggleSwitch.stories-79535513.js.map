{"version":3,"file":"ToggleSwitch.stories-79535513.js","sources":["../../src/lib/hooks/useToggleSwitch.ts","../../src/lib/ToggleSwitch/style.ts","../../src/lib/ToggleSwitch/index.tsx"],"sourcesContent":["import { useState } from 'react';\n\nexport const useToggleSwitch = (firstText: string, secondText: string) => {\n  const [selectedButton, setSelectedButton] = useState(firstText);\n\n  const firstButton = {\n    text: firstText,\n    event: () => setSelectedButton(firstText),\n  };\n\n  const secondButton = {\n    text: secondText,\n    event: () => setSelectedButton(secondText),\n  };\n\n  return { selectedButton, firstButton, secondButton };\n};\n","import { styled } from 'styled-components';\n\nimport { Size } from '../types';\n\nconst SIZE = {\n  sm: { height: '40px' },\n  md: { height: '60px' },\n  lg: { height: '80px' },\n  free: { height: '100%' },\n};\n\nexport const Wrapper = styled.div<{ $size: Size | 'free' }>`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  justify-items: center;\n\n  height: ${(props) => SIZE[props.$size].height};\n  border: 1.5px solid var(--primary-color);\n  border-radius: 4px;\n`;\n\nexport const Content = styled.button<{ $isSelected: boolean }>`\n  border-radius: 4px;\n\n  height: calc(100% - 10px);\n  width: calc(100% - 10px);\n\n  background-color: ${(props) => props.$isSelected && 'var(--primary-color)'};\n  color: ${(props) => (props.$isSelected ? 'white' : 'var(--primary-color)')};\n\n  font: var(--text-caption);\n  letter-spacing: 1px;\n\n  cursor: pointer;\n`;\n","import { Size } from '../types';\n\nimport * as S from './style';\n\ninterface ButtonInfo {\n  text: string;\n  event: () => void;\n}\n\ninterface ToggleSwitchProps {\n  size: Size | 'free';\n  selectedButton: string;\n  firstButton: ButtonInfo;\n  secondButton: ButtonInfo;\n}\n\nexport default function ToggleSwitch({\n  size,\n  selectedButton,\n  firstButton,\n  secondButton,\n}: ToggleSwitchProps) {\n  const handleFirstButtonClick = () => {\n    if (selectedButton === firstButton.text) return;\n\n    firstButton.event();\n  };\n\n  const handleSecondButtonClick = () => {\n    if (selectedButton === secondButton.text) return;\n\n    secondButton.event();\n  };\n\n  return (\n    <S.Wrapper $size={size}>\n      <S.Content\n        onClick={handleFirstButtonClick}\n        $isSelected={selectedButton === firstButton.text}\n      >\n        {firstButton.text}\n      </S.Content>\n      <S.Content\n        onClick={handleSecondButtonClick}\n        $isSelected={selectedButton === secondButton.text}\n      >\n        {secondButton.text}\n      </S.Content>\n    </S.Wrapper>\n  );\n}\n"],"names":["useToggleSwitch","firstText","secondText","selectedButton","setSelectedButton","useState","SIZE","Wrapper","styled","props","Content","ToggleSwitch","size","firstButton","secondButton","handleFirstButtonClick","handleSecondButtonClick","jsxs","S.Wrapper","jsx","S.Content"],"mappings":"6JAEa,MAAAA,EAAkB,CAACC,EAAmBC,IAAuB,CACxE,KAAM,CAACC,EAAgBC,CAAiB,EAAIC,WAASJ,CAAS,EAYvD,MAAA,CAAE,eAAAE,EAAgB,YAVL,CAClB,KAAMF,EACN,MAAO,IAAMG,EAAkBH,CAAS,CAAA,EAQJ,aALjB,CACnB,KAAMC,EACN,MAAO,IAAME,EAAkBF,CAAU,CAAA,EAI7C,ECZMI,EAAO,CACX,GAAI,CAAE,OAAQ,MAAO,EACrB,GAAI,CAAE,OAAQ,MAAO,EACrB,GAAI,CAAE,OAAQ,MAAO,EACrB,KAAM,CAAE,OAAQ,MAAO,CACzB,EAEaC,EAAUC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMjBC,GAAUH,EAAKG,EAAM,KAAK,EAAE,MAAM;AAAA;AAAA;AAAA,EAKlCC,EAAUF,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMPC,GAAUA,EAAM,aAAe,sBAAsB;AAAA,WAChEA,GAAWA,EAAM,YAAc,QAAU,sBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECb5E,SAAAE,EAAA,CAAqC,KAAAC,EACnC,eAAAT,EACA,YAAAU,EACA,aAAAC,CAEF,EAAA,CACE,MAAAC,EAAA,IAAA,CACEZ,IAAAU,EAAA,MAEAA,EAAA,MAAA,CAAkB,EAGpBG,EAAA,IAAA,CACEb,IAAAW,EAAA,MAEAA,EAAA,MAAA,CAAmB,EAGrB,OAAAG,EAAAC,EAAA,CAAA,MAAAN,EAAA,SAAA,CAEIO,EAAAC,EAAG,CAAF,QAAAL,EACU,YAAAZ,IAAAU,EAAA,KACmC,SAAAA,EAAA,IAE/B,CAAA,EACfM,EACAC,EAAG,CAAF,QAAAJ,EACU,YAAAb,IAAAW,EAAA,KACoC,SAAAA,EAAA,IAE/B,CAAA,CAChB,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}